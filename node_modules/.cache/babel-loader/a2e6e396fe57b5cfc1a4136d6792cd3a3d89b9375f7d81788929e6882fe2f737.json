{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u043E\\u0441\\u0442\\u044F\\\\my-first-app\\\\src\\\\clicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Clicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Clicker() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [instances, setInstances] = useState([]); // Массив объектов с данными для картинки и аудио\n\n  // Размер картинки (ширина)\n  const imgWidth = 80;\n  const imgHeight = 80;\n\n  // Функция для генерации случайной позиции с учетом размеров картинки\n  const getRandomPosition = () => {\n    const maxX = window.innerWidth - imgWidth - 100;\n    const maxY = window.innerHeight - imgHeight - 100;\n    const x = Math.floor(Math.random() * maxX);\n    const y = Math.floor(Math.random() * maxY);\n    return {\n      x,\n      y\n    };\n  };\n  const handleClick = () => {\n    setCount(prev => prev + 1);\n    const {\n      x,\n      y\n    } = getRandomPosition();\n\n    // Создаем уникальный id для картинки (например, с помощью времени)\n    const id = Date.now();\n    const newInstance = {\n      id,\n      x,\n      y\n    };\n\n    // Добавляем новый экземпляр в массив\n    setInstances(prev => [...prev, newInstance]);\n\n    // Через 2 секунды удаляем эту картинку\n    setTimeout(() => {\n      setInstances(prev => prev.filter(instance => instance.id !== id));\n    }, 5000);\n  };\n  const imageSrc = process.env.PUBLIC_URL + '/ej.jpg';\n  const audioSrc = process.env.PUBLIC_URL + '/chich.mp3';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clicker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clicker-button\",\n      onClick: handleClick,\n      children: \"\\u041A\\u043B\\u0438\\u043A\\u043D\\u0438 \\u0435\\u0436\\u0430!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clicker-count\",\n      children: [count, \" \\u0435\\u0436\\u0435\\u0439\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), instances.map(instance => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSrc,\n        alt: \"Random\",\n        className: \"clicker-image\",\n        style: {\n          left: instance.x,\n          top: instance.y\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audioSrc,\n        autoPlay: true,\n        style: {\n          display: 'none'\n        },\n        ref: audio => {\n          if (audio) {\n            audio.volume = 0.4;\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, instance.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Clicker, \"yU4JtludgKtzfQ2gmeAV8yCMpdk=\");\n_c = Clicker;\nexport default Clicker;\nvar _c;\n$RefreshReg$(_c, \"Clicker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Clicker","_s","count","setCount","instances","setInstances","imgWidth","imgHeight","getRandomPosition","maxX","window","innerWidth","maxY","innerHeight","x","Math","floor","random","y","handleClick","prev","id","Date","now","newInstance","setTimeout","filter","instance","imageSrc","process","env","PUBLIC_URL","audioSrc","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","style","left","top","autoPlay","display","ref","audio","volume","_c","$RefreshReg$"],"sources":["C:/Users/Костя/my-first-app/src/clicker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Clicker.css';\r\n\r\nfunction Clicker() {\r\n  const [count, setCount] = useState(0);\r\n  const [instances, setInstances] = useState([]); // Массив объектов с данными для картинки и аудио\r\n\r\n  // Размер картинки (ширина)\r\n  const imgWidth = 80;\r\n  const imgHeight = 80;\r\n\r\n  // Функция для генерации случайной позиции с учетом размеров картинки\r\n  const getRandomPosition = () => {\r\n    const maxX = window.innerWidth - imgWidth-100;\r\n    const maxY = window.innerHeight - imgHeight-100;\r\n    const x = Math.floor(Math.random() * maxX);\r\n    const y = Math.floor(Math.random() * maxY);\r\n    return { x, y };\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setCount(prev => prev + 1);\r\n    const { x, y } = getRandomPosition();\r\n\r\n    // Создаем уникальный id для картинки (например, с помощью времени)\r\n    const id = Date.now();\r\n    const newInstance = { id, x, y };\r\n\r\n    // Добавляем новый экземпляр в массив\r\n    setInstances(prev => [...prev, newInstance]);\r\n\r\n    // Через 2 секунды удаляем эту картинку\r\n    setTimeout(() => {\r\n        setInstances(prev => prev.filter(instance => instance.id !== id));\r\n      }, 5000);\r\n    };\r\n\r\n  const imageSrc = process.env.PUBLIC_URL + '/ej.jpg';\r\n  const audioSrc = process.env.PUBLIC_URL + '/chich.mp3';\r\n\r\n  return (\r\n    <div className=\"clicker-container\">\r\n      <button className=\"clicker-button\" onClick={handleClick}>\r\n        Кликни ежа!\r\n      </button>\r\n      <p className=\"clicker-count\">{count} ежей</p>\r\n      {instances.map(instance => (\r\n        <div key={instance.id}>\r\n          <img src={imageSrc} alt=\"Random\" className=\"clicker-image\" style={{ left: instance.x, top: instance.y }}/>\r\n          <audio src={audioSrc} autoPlay style={{ display: 'none' }}\r\n            ref={audio => {if (audio) {audio.volume = 0.4;}\r\n            }}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Clicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}