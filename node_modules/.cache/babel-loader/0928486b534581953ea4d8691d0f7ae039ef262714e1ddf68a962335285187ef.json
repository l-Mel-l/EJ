{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u043E\\u0441\\u0442\\u044F\\\\my-first-app\\\\src\\\\clicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Clicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Clicker() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [images, setImages] = useState([]); // Массив объектов с данными о картинках\n\n  // Фиксированные размеры картинки\n  const imgWidth = 80;\n  const imgHeight = 80;\n\n  // Функция для генерации случайной позиции с учетом размеров картинки\n  const getRandomPosition = () => {\n    const maxX = window.innerWidth - imgWidth;\n    const maxY = window.innerHeight - imgHeight;\n    const x = Math.floor(Math.random() * maxX);\n    const y = Math.floor(Math.random() * maxY);\n    return {\n      x,\n      y\n    };\n  };\n  const handleClick = () => {\n    setCount(prev => prev + 1);\n    const {\n      x,\n      y\n    } = getRandomPosition();\n\n    // Создаем уникальный id для картинки (например, с помощью времени)\n    const id = Date.now();\n\n    // Добавляем новую картинку в массив\n    setImages(prev => [...prev, {\n      id,\n      x,\n      y\n    }]);\n\n    // Через 2 секунды удаляем эту картинку\n    setTimeout(() => {\n      setImages(prev => prev.filter(image => image.id !== id));\n    }, 2000);\n  };\n\n  // Путь к картинке из папки public\n  const imageSrc = process.env.PUBLIC_URL + '/ej.jpg';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clicker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clicker-button\",\n      onClick: handleClick,\n      children: \"\\u041A\\u043B\\u0438\\u043A\\u043D\\u0438 \\u043C\\u0435\\u043D\\u044F!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clicker-count\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: \"Random\",\n      className: \"clicker-image\",\n      style: {\n        left: image.x,\n        top: image.y\n      }\n    }, image.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Clicker, \"S6dggniYLNNhTFCxJg0YqtJpq7w=\");\n_c = Clicker;\nexport default Clicker;\nvar _c;\n$RefreshReg$(_c, \"Clicker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Clicker","_s","count","setCount","images","setImages","imgWidth","imgHeight","getRandomPosition","maxX","window","innerWidth","maxY","innerHeight","x","Math","floor","random","y","handleClick","prev","id","Date","now","setTimeout","filter","image","imageSrc","process","env","PUBLIC_URL","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","style","left","top","_c","$RefreshReg$"],"sources":["C:/Users/Костя/my-first-app/src/clicker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Clicker.css';\r\n\r\nfunction Clicker() {\r\n  const [count, setCount] = useState(0);\r\n  const [images, setImages] = useState([]); // Массив объектов с данными о картинках\r\n\r\n  // Фиксированные размеры картинки\r\n  const imgWidth = 80;\r\n  const imgHeight = 80;\r\n\r\n  // Функция для генерации случайной позиции с учетом размеров картинки\r\n  const getRandomPosition = () => {\r\n    const maxX = window.innerWidth - imgWidth;\r\n    const maxY = window.innerHeight - imgHeight;\r\n    const x = Math.floor(Math.random() * maxX);\r\n    const y = Math.floor(Math.random() * maxY);\r\n    return { x, y };\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setCount(prev => prev + 1);\r\n    const { x, y } = getRandomPosition();\r\n\r\n    // Создаем уникальный id для картинки (например, с помощью времени)\r\n    const id = Date.now();\r\n\r\n    // Добавляем новую картинку в массив\r\n    setImages(prev => [...prev, { id, x, y }]);\r\n\r\n    // Через 2 секунды удаляем эту картинку\r\n    setTimeout(() => {\r\n      setImages(prev => prev.filter(image => image.id !== id));\r\n    }, 2000);\r\n  };\r\n\r\n  // Путь к картинке из папки public\r\n  const imageSrc = process.env.PUBLIC_URL + '/ej.jpg';\r\n\r\n  return (\r\n    <div className=\"clicker-container\">\r\n      <button className=\"clicker-button\" onClick={handleClick}>\r\n        Кликни меня!\r\n      </button>\r\n      <p className=\"clicker-count\">{count}</p>\r\n      {images.map(image => (\r\n        <img\r\n          key={image.id}\r\n          src={imageSrc}\r\n          alt=\"Random\"\r\n          className=\"clicker-image\"\r\n          style={{ left: image.x, top: image.y }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Clicker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMS,QAAQ,GAAG,EAAE;EACnB,MAAMC,SAAS,GAAG,EAAE;;EAEpB;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,IAAI,GAAGC,MAAM,CAACC,UAAU,GAAGL,QAAQ;IACzC,MAAMM,IAAI,GAAGF,MAAM,CAACG,WAAW,GAAGN,SAAS;IAC3C,MAAMO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,IAAI,CAAC;IAC1C,MAAMS,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,IAAI,CAAC;IAC1C,OAAO;MAAEE,CAAC;MAAEI;IAAE,CAAC;EACjB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBhB,QAAQ,CAACiB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC1B,MAAM;MAAEN,CAAC;MAAEI;IAAE,CAAC,GAAGV,iBAAiB,CAAC,CAAC;;IAEpC;IACA,MAAMa,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;;IAErB;IACAlB,SAAS,CAACe,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEC,EAAE;MAAEP,CAAC;MAAEI;IAAE,CAAC,CAAC,CAAC;;IAE1C;IACAM,UAAU,CAAC,MAAM;MACfnB,SAAS,CAACe,IAAI,IAAIA,IAAI,CAACK,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC1D,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMM,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,SAAS;EAEnD,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCjC,OAAA;MAAQgC,SAAS,EAAC,gBAAgB;MAACE,OAAO,EAAEd,WAAY;MAAAa,QAAA,EAAC;IAEzD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtC,OAAA;MAAGgC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE9B;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvCjC,MAAM,CAACkC,GAAG,CAACZ,KAAK,iBACf3B,OAAA;MAEEwC,GAAG,EAAEZ,QAAS;MACda,GAAG,EAAC,QAAQ;MACZT,SAAS,EAAC,eAAe;MACzBU,KAAK,EAAE;QAAEC,IAAI,EAAEhB,KAAK,CAACZ,CAAC;QAAE6B,GAAG,EAAEjB,KAAK,CAACR;MAAE;IAAE,GAJlCQ,KAAK,CAACL,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKd,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpC,EAAA,CArDQD,OAAO;AAAA4C,EAAA,GAAP5C,OAAO;AAuDhB,eAAeA,OAAO;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}